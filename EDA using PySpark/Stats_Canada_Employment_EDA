{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/yachika-yashu/yachika-yashu/blob/main/EDA%20using%20PySpark/Stats_Canada_Employment_EDA\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/yachika-yashu/yachika-yashu/blob/main/EDA%20using%20PySpark/Stats_Canada_Employment_EDA)\n"
      ],
      "metadata": {
        "id": "jhAaThAGfwl4"
      },
      "id": "jhAaThAGfwl4"
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "39K74XkJfwC0"
      },
      "id": "39K74XkJfwC0",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pyspark\n",
        "from pyspark.sql.functions import * #This line imports all functions from the pyspark.sql.functions module eq avg, agg\n",
        "from pyspark.sql.types import * #This line imports all classes from the pyspark.sql.types module. This module defines data types that are used within PySpark dataframes"
      ],
      "metadata": {
        "id": "5w98-YKTotEe"
      },
      "id": "5w98-YKTotEe",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#import required libraries\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from pyspark.sql.window import Window\n",
        "from pyspark.sql.functions import lag, col"
      ],
      "metadata": {
        "id": "2E9QHcF4MTbj"
      },
      "id": "2E9QHcF4MTbj",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pyspark.__version__"
      ],
      "metadata": {
        "id": "ZE-E5oqSs3-o",
        "outputId": "f3c3b5ac-c403-4403-80ce-c5a24cf9ea14",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        }
      },
      "id": "ZE-E5oqSs3-o",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'3.5.5'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Step 1: Creating a SparkSession**\n",
        "A SparkSession is an entry point into all functionality in Spark, and is required if you want to build a dataframe in PySpark.\n",
        "\n",
        "spark = SparkSession.builder.appName(\"Pyspark ETL project\").config(\"spark.memory.offHeap.enabled\",\"true\").config(\"spark.memory.offHeap.size\",\"10g\").getOrCreate()\n",
        "Sure! Here's a concise and informative explanation:\n",
        "\n",
        "SparkSession Configuration Breakdown\n",
        "  1. **SparkSession.builder**: Initializes the builder for creating a SparkSession.\n",
        "  2. **.appName(\"Pyspark ETL project\")**: Sets the name of the Spark application.\n",
        "  3. **.config(\"spark.memory.offHeap.enabled\", \"true\")**: Enables off-heap memory to reduce JVM garbage collection overhead and improve performance for memory-intensive applications.\n",
        "  4. **.config(\"spark.memory.offHeap.size\", \"10g\")**: Allocates 10 gigabytes of off-heap memory.\n",
        "  5. **.getOrCreate()**: Creates a new SparkSession if none exists, or retrieves the existing one.\n",
        "\n",
        "PySpark interacts with Spark’s core, which runs on the JVM (Java Virtual Machine) and is primarily written in Scala. When a SparkSession is created, it initializes the JVM environment for executing Spark operations. The JVM manages heap memory and performs garbage collection, which reclaims unused memory but can cause performance bottlenecks. To reduce this overhead, Spark supports off-heap memory—memory managed outside the JVM heap—minimizing garbage collection pauses and boosting performance. Off-heap memory can be enabled via configuration settings during SparkSession initialization, making Spark applications more memory-efficient."
      ],
      "metadata": {
        "id": "rkMvOyTvwBLH"
      },
      "id": "rkMvOyTvwBLH"
    },
    {
      "cell_type": "code",
      "source": [
        "from pyspark.sql import SparkSession"
      ],
      "metadata": {
        "id": "1m1XNn6R1oK1"
      },
      "id": "1m1XNn6R1oK1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "spark = SparkSession.builder.appName(\"Pyspark ETL project\").config(\"spark.memory.offHeap.enabled\",\"true\").config(\"spark.memory.offHeap.size\",\"10g\").getOrCreate()\n"
      ],
      "metadata": {
        "id": "K5QYRC5dwAjh"
      },
      "id": "K5QYRC5dwAjh",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "spark"
      ],
      "metadata": {
        "id": "Am65ELKwwAgH",
        "outputId": "44d3a5f0-9d29-4e57-d5df-2cfee086b4fe",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 222
        }
      },
      "id": "Am65ELKwwAgH",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<pyspark.sql.session.SparkSession at 0x7ca8a96e3d90>"
            ],
            "text/html": [
              "\n",
              "            <div>\n",
              "                <p><b>SparkSession - in-memory</b></p>\n",
              "                \n",
              "        <div>\n",
              "            <p><b>SparkContext</b></p>\n",
              "\n",
              "            <p><a href=\"http://7e1ad432faa8:4040\">Spark UI</a></p>\n",
              "\n",
              "            <dl>\n",
              "              <dt>Version</dt>\n",
              "                <dd><code>v3.5.5</code></dd>\n",
              "              <dt>Master</dt>\n",
              "                <dd><code>local[*]</code></dd>\n",
              "              <dt>AppName</dt>\n",
              "                <dd><code>Pyspark ETL project</code></dd>\n",
              "            </dl>\n",
              "        </div>\n",
              "        \n",
              "            </div>\n",
              "        "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = spark.read.csv('statsdata.csv',header=True)"
      ],
      "metadata": {
        "id": "rC0ZRObowAc7"
      },
      "id": "rC0ZRObowAc7",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#df.show()\n",
        "df.show(5,0) #same as df.head(5)"
      ],
      "metadata": {
        "id": "-oCBVs_XwAZ7",
        "outputId": "a80e8839-49ff-42de-d64b-29ff96e92246",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "-oCBVs_XwAZ7",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+------+--------------+----------------------------+--------------+-----------------+--------------------+------+-------------+---------+--------+----------+-------+------+------+----------+--------+\n",
            "|REF_DATE|GEO   |DGUID         |Labour force characteristics|Gender        |Age group        |UOM                 |UOM_ID|SCALAR_FACTOR|SCALAR_ID|VECTOR  |COORDINATE|VALUE  |STATUS|SYMBOL|TERMINATED|DECIMALS|\n",
            "+--------+------+--------------+----------------------------+--------------+-----------------+--------------------+------+-------------+---------+--------+----------+-------+------+------+----------+--------+\n",
            "|2024-11 |Canada|2021A000011124|Employment                  |Total - Gender|15 years and over|Persons in thousands|428   |thousands    |3        |v2091072|1.3.1.1   |20828.6|NULL  |NULL  |NULL      |1       |\n",
            "|2024-12 |Canada|2021A000011124|Employment                  |Total - Gender|15 years and over|Persons in thousands|428   |thousands    |3        |v2091072|1.3.1.1   |20843.6|NULL  |NULL  |NULL      |1       |\n",
            "|2025-01 |Canada|2021A000011124|Employment                  |Total - Gender|15 years and over|Persons in thousands|428   |thousands    |3        |v2091072|1.3.1.1   |20670.1|NULL  |NULL  |NULL      |1       |\n",
            "|2025-02 |Canada|2021A000011124|Employment                  |Total - Gender|15 years and over|Persons in thousands|428   |thousands    |3        |v2091072|1.3.1.1   |20768.6|NULL  |NULL  |NULL      |1       |\n",
            "|2025-03 |Canada|2021A000011124|Employment                  |Total - Gender|15 years and over|Persons in thousands|428   |thousands    |3        |v2091072|1.3.1.1   |20758.0|NULL  |NULL  |NULL      |1       |\n",
            "+--------+------+--------------+----------------------------+--------------+-----------------+--------------------+------+-------------+---------+--------+----------+-------+------+------+----------+--------+\n",
            "only showing top 5 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Step 2:  Data Wrangling / Data Preprocessing**\n",
        "\n",
        "\n",
        "2.1 Inspecting Data inclues Viewing column names, data types, and summary statistics."
      ],
      "metadata": {
        "id": "4ja-T2JhBYKx"
      },
      "id": "4ja-T2JhBYKx"
    },
    {
      "cell_type": "code",
      "source": [
        "type(df)"
      ],
      "metadata": {
        "id": "kouYwc8zwAWj",
        "outputId": "2e589718-402c-4857-c5cf-c7f91ccd219f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 186
        }
      },
      "id": "kouYwc8zwAWj",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pyspark.sql.dataframe.DataFrame"
            ],
            "text/html": [
              "<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n",
              "      pre.function-repr-contents {\n",
              "        overflow-x: auto;\n",
              "        padding: 8px 12px;\n",
              "        max-height: 500px;\n",
              "      }\n",
              "\n",
              "      pre.function-repr-contents.function-repr-contents-collapsed {\n",
              "        cursor: pointer;\n",
              "        max-height: 100px;\n",
              "      }\n",
              "    </style>\n",
              "    <pre style=\"white-space: initial; background:\n",
              "         var(--colab-secondary-surface-color); padding: 8px 12px;\n",
              "         border-bottom: 1px solid var(--colab-border-color);\"><b>pyspark.sql.dataframe.DataFrame</b><br/>def __init__(jdf: JavaObject, sql_ctx: Union[&#x27;SQLContext&#x27;, &#x27;SparkSession&#x27;])</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.11/dist-packages/pyspark/sql/dataframe.py</a>A distributed collection of data grouped into named columns.\n",
              "\n",
              ".. versionadded:: 1.3.0\n",
              "\n",
              ".. versionchanged:: 3.4.0\n",
              "    Supports Spark Connect.\n",
              "\n",
              "Examples\n",
              "--------\n",
              "A :class:`DataFrame` is equivalent to a relational table in Spark SQL,\n",
              "and can be created using various functions in :class:`SparkSession`:\n",
              "\n",
              "&gt;&gt;&gt; people = spark.createDataFrame([\n",
              "...     {&quot;deptId&quot;: 1, &quot;age&quot;: 40, &quot;name&quot;: &quot;Hyukjin Kwon&quot;, &quot;gender&quot;: &quot;M&quot;, &quot;salary&quot;: 50},\n",
              "...     {&quot;deptId&quot;: 1, &quot;age&quot;: 50, &quot;name&quot;: &quot;Takuya Ueshin&quot;, &quot;gender&quot;: &quot;M&quot;, &quot;salary&quot;: 100},\n",
              "...     {&quot;deptId&quot;: 2, &quot;age&quot;: 60, &quot;name&quot;: &quot;Xinrong Meng&quot;, &quot;gender&quot;: &quot;F&quot;, &quot;salary&quot;: 150},\n",
              "...     {&quot;deptId&quot;: 3, &quot;age&quot;: 20, &quot;name&quot;: &quot;Haejoon Lee&quot;, &quot;gender&quot;: &quot;M&quot;, &quot;salary&quot;: 200}\n",
              "... ])\n",
              "\n",
              "Once created, it can be manipulated using the various domain-specific-language\n",
              "(DSL) functions defined in: :class:`DataFrame`, :class:`Column`.\n",
              "\n",
              "To select a column from the :class:`DataFrame`, use the apply method:\n",
              "\n",
              "&gt;&gt;&gt; age_col = people.age\n",
              "\n",
              "A more concrete example:\n",
              "\n",
              "&gt;&gt;&gt; # To create DataFrame using SparkSession\n",
              "... department = spark.createDataFrame([\n",
              "...     {&quot;id&quot;: 1, &quot;name&quot;: &quot;PySpark&quot;},\n",
              "...     {&quot;id&quot;: 2, &quot;name&quot;: &quot;ML&quot;},\n",
              "...     {&quot;id&quot;: 3, &quot;name&quot;: &quot;Spark SQL&quot;}\n",
              "... ])\n",
              "\n",
              "&gt;&gt;&gt; people.filter(people.age &gt; 30).join(\n",
              "...     department, people.deptId == department.id).groupBy(\n",
              "...     department.name, &quot;gender&quot;).agg({&quot;salary&quot;: &quot;avg&quot;, &quot;age&quot;: &quot;max&quot;}).show()\n",
              "+-------+------+-----------+--------+\n",
              "|   name|gender|avg(salary)|max(age)|\n",
              "+-------+------+-----------+--------+\n",
              "|     ML|     F|      150.0|      60|\n",
              "|PySpark|     M|       75.0|      50|\n",
              "+-------+------+-----------+--------+\n",
              "\n",
              "Notes\n",
              "-----\n",
              "A DataFrame should only be created as described above. It should not be directly\n",
              "created via using the constructor.</pre>\n",
              "      <script>\n",
              "      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n",
              "        for (const element of document.querySelectorAll('.filepath')) {\n",
              "          element.style.display = 'block'\n",
              "          element.onclick = (event) => {\n",
              "            event.preventDefault();\n",
              "            event.stopPropagation();\n",
              "            google.colab.files.view(element.textContent, 80);\n",
              "          };\n",
              "        }\n",
              "      }\n",
              "      for (const element of document.querySelectorAll('.function-repr-contents')) {\n",
              "        element.onclick = (event) => {\n",
              "          event.preventDefault();\n",
              "          event.stopPropagation();\n",
              "          element.classList.toggle('function-repr-contents-collapsed');\n",
              "        };\n",
              "      }\n",
              "      </script>\n",
              "      </div>"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### Check the schema\n",
        "df.printSchema()   #same as df.info() in pandas"
      ],
      "metadata": {
        "id": "j7SW9MzIwAS-",
        "outputId": "f40ff83b-74cf-48b2-d1ee-ea0750fa7c86",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "j7SW9MzIwAS-",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "root\n",
            " |-- REF_DATE: string (nullable = true)\n",
            " |-- GEO: string (nullable = true)\n",
            " |-- DGUID: string (nullable = true)\n",
            " |-- Labour force characteristics: string (nullable = true)\n",
            " |-- Gender: string (nullable = true)\n",
            " |-- Age group: string (nullable = true)\n",
            " |-- UOM: string (nullable = true)\n",
            " |-- UOM_ID: string (nullable = true)\n",
            " |-- SCALAR_FACTOR: string (nullable = true)\n",
            " |-- SCALAR_ID: string (nullable = true)\n",
            " |-- VECTOR: string (nullable = true)\n",
            " |-- COORDINATE: string (nullable = true)\n",
            " |-- VALUE: string (nullable = true)\n",
            " |-- STATUS: string (nullable = true)\n",
            " |-- SYMBOL: string (nullable = true)\n",
            " |-- TERMINATED: string (nullable = true)\n",
            " |-- DECIMALS: string (nullable = true)\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.count()  #no. of rows in the dataframe"
      ],
      "metadata": {
        "id": "4himAD6KwAPu",
        "outputId": "31c900ad-acb3-4c41-97a1-dc035d848cb5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "4himAD6KwAPu",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "330"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns  #column names in the dataframe"
      ],
      "metadata": {
        "id": "C9VcD7oO6hIM",
        "outputId": "dd335a4d-7d4b-4ced-c862-b8cc136c3d8b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "C9VcD7oO6hIM",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['REF_DATE',\n",
              " 'GEO',\n",
              " 'DGUID',\n",
              " 'Labour force characteristics',\n",
              " 'Gender',\n",
              " 'Age group',\n",
              " 'UOM',\n",
              " 'UOM_ID',\n",
              " 'SCALAR_FACTOR',\n",
              " 'SCALAR_ID',\n",
              " 'VECTOR',\n",
              " 'COORDINATE',\n",
              " 'VALUE',\n",
              " 'STATUS',\n",
              " 'SYMBOL',\n",
              " 'TERMINATED',\n",
              " 'DECIMALS']"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "To view some columns: use Select and show"
      ],
      "metadata": {
        "id": "IehJOKAI3qzn"
      },
      "id": "IehJOKAI3qzn"
    },
    {
      "cell_type": "code",
      "source": [
        "df.select(['REF_DATE','Gender', 'Age group','VALUE',]).show(5)"
      ],
      "metadata": {
        "id": "YPKv3xpP3qf5",
        "outputId": "5346a4bc-9f0b-4d29-fff5-e6e3ab5e5f69",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "YPKv3xpP3qf5",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+--------------+-----------------+-------+\n",
            "|REF_DATE|        Gender|        Age group|  VALUE|\n",
            "+--------+--------------+-----------------+-------+\n",
            "| 2024-11|Total - Gender|15 years and over|20828.6|\n",
            "| 2024-12|Total - Gender|15 years and over|20843.6|\n",
            "| 2025-01|Total - Gender|15 years and over|20670.1|\n",
            "| 2025-02|Total - Gender|15 years and over|20768.6|\n",
            "| 2025-03|Total - Gender|15 years and over|20758.0|\n",
            "+--------+--------------+-----------------+-------+\n",
            "only showing top 5 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes #datatype of each column"
      ],
      "metadata": {
        "id": "l8ci_0p_wAIZ",
        "outputId": "d67da92a-f9c3-429c-b334-2109f81e6021",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "l8ci_0p_wAIZ",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[('REF_DATE', 'string'),\n",
              " ('GEO', 'string'),\n",
              " ('DGUID', 'string'),\n",
              " ('Labour force characteristics', 'string'),\n",
              " ('Gender', 'string'),\n",
              " ('Age group', 'string'),\n",
              " ('UOM', 'string'),\n",
              " ('UOM_ID', 'string'),\n",
              " ('SCALAR_FACTOR', 'string'),\n",
              " ('SCALAR_ID', 'string'),\n",
              " ('VECTOR', 'string'),\n",
              " ('COORDINATE', 'string'),\n",
              " ('VALUE', 'string'),\n",
              " ('STATUS', 'string'),\n",
              " ('SYMBOL', 'string'),\n",
              " ('TERMINATED', 'string'),\n",
              " ('DECIMALS', 'string')]"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#change value column datatype to integer\n",
        "df=df.withColumn(\"VALUE\",df.VALUE.cast('float'))"
      ],
      "metadata": {
        "id": "DACSTKmYsJXJ"
      },
      "id": "DACSTKmYsJXJ",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#change ref_date column datatype to timestamp\n",
        "\n",
        "\n",
        "df = df.withColumn('REF_DATE_Date', to_date(trim(col('REF_DATE')), 'yyyy-MM'))\n"
      ],
      "metadata": {
        "id": "_jdn5b_wCFpu"
      },
      "id": "_jdn5b_wCFpu",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes #datatype of each column"
      ],
      "metadata": {
        "id": "WB4kWksX0HJx",
        "outputId": "33d06beb-f1b2-44e1-c6ea-c6970d4dd978",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "WB4kWksX0HJx",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[('REF_DATE', 'string'),\n",
              " ('GEO', 'string'),\n",
              " ('DGUID', 'string'),\n",
              " ('Labour force characteristics', 'string'),\n",
              " ('Gender', 'string'),\n",
              " ('Age group', 'string'),\n",
              " ('UOM', 'string'),\n",
              " ('UOM_ID', 'string'),\n",
              " ('SCALAR_FACTOR', 'string'),\n",
              " ('SCALAR_ID', 'string'),\n",
              " ('VECTOR', 'string'),\n",
              " ('COORDINATE', 'string'),\n",
              " ('VALUE', 'float'),\n",
              " ('STATUS', 'string'),\n",
              " ('SYMBOL', 'string'),\n",
              " ('TERMINATED', 'string'),\n",
              " ('DECIMALS', 'string'),\n",
              " ('REF_DATE_Date', 'date')]"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.show()"
      ],
      "metadata": {
        "id": "W6mbxZhy3CoX",
        "outputId": "d36f66ca-8551-4072-8607-b6319746f572",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "W6mbxZhy3CoX",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+------+--------------+----------------------------+--------------+-----------------+--------------------+------+-------------+---------+--------+----------+-------+------+------+----------+--------+-------------+\n",
            "|REF_DATE|   GEO|         DGUID|Labour force characteristics|        Gender|        Age group|                 UOM|UOM_ID|SCALAR_FACTOR|SCALAR_ID|  VECTOR|COORDINATE|  VALUE|STATUS|SYMBOL|TERMINATED|DECIMALS|REF_DATE_Date|\n",
            "+--------+------+--------------+----------------------------+--------------+-----------------+--------------------+------+-------------+---------+--------+----------+-------+------+------+----------+--------+-------------+\n",
            "| 2024-11|Canada|2021A000011124|                  Employment|Total - Gender|15 years and over|Persons in thousands|   428|    thousands|        3|v2091072|   1.3.1.1|20828.6|  NULL|  NULL|      NULL|       1|   2024-11-01|\n",
            "| 2024-12|Canada|2021A000011124|                  Employment|Total - Gender|15 years and over|Persons in thousands|   428|    thousands|        3|v2091072|   1.3.1.1|20843.6|  NULL|  NULL|      NULL|       1|   2024-12-01|\n",
            "| 2025-01|Canada|2021A000011124|                  Employment|Total - Gender|15 years and over|Persons in thousands|   428|    thousands|        3|v2091072|   1.3.1.1|20670.1|  NULL|  NULL|      NULL|       1|   2025-01-01|\n",
            "| 2025-02|Canada|2021A000011124|                  Employment|Total - Gender|15 years and over|Persons in thousands|   428|    thousands|        3|v2091072|   1.3.1.1|20768.6|  NULL|  NULL|      NULL|       1|   2025-02-01|\n",
            "| 2025-03|Canada|2021A000011124|                  Employment|Total - Gender|15 years and over|Persons in thousands|   428|    thousands|        3|v2091072|   1.3.1.1|20758.0|  NULL|  NULL|      NULL|       1|   2025-03-01|\n",
            "| 2024-11|Canada|2021A000011124|                  Employment|Total - Gender|   15 to 24 years|Persons in thousands|   428|    thousands|        3|v2091073|   1.3.1.2| 2598.2|  NULL|  NULL|      NULL|       1|   2024-11-01|\n",
            "| 2024-12|Canada|2021A000011124|                  Employment|Total - Gender|   15 to 24 years|Persons in thousands|   428|    thousands|        3|v2091073|   1.3.1.2| 2615.8|  NULL|  NULL|      NULL|       1|   2024-12-01|\n",
            "| 2025-01|Canada|2021A000011124|                  Employment|Total - Gender|   15 to 24 years|Persons in thousands|   428|    thousands|        3|v2091073|   1.3.1.2| 2552.3|  NULL|  NULL|      NULL|       1|   2025-01-01|\n",
            "| 2025-02|Canada|2021A000011124|                  Employment|Total - Gender|   15 to 24 years|Persons in thousands|   428|    thousands|        3|v2091073|   1.3.1.2| 2574.4|  NULL|  NULL|      NULL|       1|   2025-02-01|\n",
            "| 2025-03|Canada|2021A000011124|                  Employment|Total - Gender|   15 to 24 years|Persons in thousands|   428|    thousands|        3|v2091073|   1.3.1.2| 2575.3|  NULL|  NULL|      NULL|       1|   2025-03-01|\n",
            "| 2024-11|Canada|2021A000011124|                  Employment|Total - Gender|25 years and over|Persons in thousands|   428|    thousands|        3|v2091074|   1.3.1.3|18230.5|  NULL|  NULL|      NULL|       1|   2024-11-01|\n",
            "| 2024-12|Canada|2021A000011124|                  Employment|Total - Gender|25 years and over|Persons in thousands|   428|    thousands|        3|v2091074|   1.3.1.3|18227.8|  NULL|  NULL|      NULL|       1|   2024-12-01|\n",
            "| 2025-01|Canada|2021A000011124|                  Employment|Total - Gender|25 years and over|Persons in thousands|   428|    thousands|        3|v2091074|   1.3.1.3|18117.8|  NULL|  NULL|      NULL|       1|   2025-01-01|\n",
            "| 2025-02|Canada|2021A000011124|                  Employment|Total - Gender|25 years and over|Persons in thousands|   428|    thousands|        3|v2091074|   1.3.1.3|18194.2|  NULL|  NULL|      NULL|       1|   2025-02-01|\n",
            "| 2025-03|Canada|2021A000011124|                  Employment|Total - Gender|25 years and over|Persons in thousands|   428|    thousands|        3|v2091074|   1.3.1.3|18182.7|  NULL|  NULL|      NULL|       1|   2025-03-01|\n",
            "| 2024-11|Canada|2021A000011124|                  Employment|Total - Gender|   25 to 44 years|Persons in thousands|   428|    thousands|        3|v2091075|   1.3.1.4| 9765.7|  NULL|  NULL|      NULL|       1|   2024-11-01|\n",
            "| 2024-12|Canada|2021A000011124|                  Employment|Total - Gender|   25 to 44 years|Persons in thousands|   428|    thousands|        3|v2091075|   1.3.1.4| 9768.0|  NULL|  NULL|      NULL|       1|   2024-12-01|\n",
            "| 2025-01|Canada|2021A000011124|                  Employment|Total - Gender|   25 to 44 years|Persons in thousands|   428|    thousands|        3|v2091075|   1.3.1.4| 9699.5|  NULL|  NULL|      NULL|       1|   2025-01-01|\n",
            "| 2025-02|Canada|2021A000011124|                  Employment|Total - Gender|   25 to 44 years|Persons in thousands|   428|    thousands|        3|v2091075|   1.3.1.4| 9764.6|  NULL|  NULL|      NULL|       1|   2025-02-01|\n",
            "| 2025-03|Canada|2021A000011124|                  Employment|Total - Gender|   25 to 44 years|Persons in thousands|   428|    thousands|        3|v2091075|   1.3.1.4| 9760.3|  NULL|  NULL|      NULL|       1|   2025-03-01|\n",
            "+--------+------+--------------+----------------------------+--------------+-----------------+--------------------+------+-------------+---------+--------+----------+-------+------+------+----------+--------+-------------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe().show() #summary of all columns"
      ],
      "metadata": {
        "id": "1ZKBU4Z3wAE6",
        "outputId": "1fabcc69-e8b6-4fc3-8774-9fe0d02fea90",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "1ZKBU4Z3wAE6",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+-------+--------+------+--------------+----------------------------+------+-----------------+--------------------+------+-------------+---------+---------+----------+-----------------+------+------+----------+--------+\n",
            "|summary|REF_DATE|   GEO|         DGUID|Labour force characteristics|Gender|        Age group|                 UOM|UOM_ID|SCALAR_FACTOR|SCALAR_ID|   VECTOR|COORDINATE|            VALUE|STATUS|SYMBOL|TERMINATED|DECIMALS|\n",
            "+-------+--------+------+--------------+----------------------------+------+-----------------+--------------------+------+-------------+---------+---------+----------+-----------------+------+------+----------+--------+\n",
            "|  count|     330|   330|           330|                         330|   330|              330|                 330|   330|          330|      330|      330|       330|              330|     0|     0|         0|     330|\n",
            "|   mean|    NULL|  NULL|          NULL|                        NULL|  NULL|             NULL|                NULL| 428.0|         NULL|      3.0|     NULL|      NULL|3842.916659407182|  NULL|  NULL|      NULL|     1.0|\n",
            "| stddev|    NULL|  NULL|          NULL|                        NULL|  NULL|             NULL|                NULL|   0.0|         NULL|      0.0|     NULL|      NULL|4731.591283119073|  NULL|  NULL|      NULL|     0.0|\n",
            "|    min| 2024-11|Canada|2021A000011124|                  Employment|  Men+|   15 to 19 years|Persons in thousands|   428|    thousands|        3|v19650588|   1.3.1.1|            148.7|  NULL|  NULL|      NULL|       1|\n",
            "|    max| 2025-03|Canada|2021A000011124|                  Employment|Women+|70 years and over|Persons in thousands|   428|    thousands|        3| v2091512|   1.3.3.9|          20843.6|  NULL|  NULL|      NULL|       1|\n",
            "+-------+--------+------+--------------+----------------------------+------+-----------------+--------------------+------+-------------+---------+---------+----------+-----------------+------+------+----------+--------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "2.2 Transforming Data: Adding, removing, or renaming columns; encoding categorical variables; normalizing data."
      ],
      "metadata": {
        "id": "Sj6UF1OADPf2"
      },
      "id": "Sj6UF1OADPf2"
    },
    {
      "cell_type": "code",
      "source": [
        "### Adding Columns in data frame\n",
        "df=df.withColumn('Employment_Count',df['VALUE']*1000)\n"
      ],
      "metadata": {
        "id": "HgmspmTvv__N"
      },
      "id": "HgmspmTvv__N",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.show(5)"
      ],
      "metadata": {
        "id": "pt5vnPBntBkr",
        "outputId": "ae78b82f-980e-47fc-c2df-7563e5ab72e9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "pt5vnPBntBkr",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+------+--------------+----------------------------+--------------+-----------------+--------------------+------+-------------+---------+--------+----------+-------+------+------+----------+--------+-------------+----------------+\n",
            "|REF_DATE|   GEO|         DGUID|Labour force characteristics|        Gender|        Age group|                 UOM|UOM_ID|SCALAR_FACTOR|SCALAR_ID|  VECTOR|COORDINATE|  VALUE|STATUS|SYMBOL|TERMINATED|DECIMALS|REF_DATE_Date|Employment_Count|\n",
            "+--------+------+--------------+----------------------------+--------------+-----------------+--------------------+------+-------------+---------+--------+----------+-------+------+------+----------+--------+-------------+----------------+\n",
            "| 2024-11|Canada|2021A000011124|                  Employment|Total - Gender|15 years and over|Persons in thousands|   428|    thousands|        3|v2091072|   1.3.1.1|20828.6|  NULL|  NULL|      NULL|       1|   2024-11-01|       2.08286E7|\n",
            "| 2024-12|Canada|2021A000011124|                  Employment|Total - Gender|15 years and over|Persons in thousands|   428|    thousands|        3|v2091072|   1.3.1.1|20843.6|  NULL|  NULL|      NULL|       1|   2024-12-01|       2.08436E7|\n",
            "| 2025-01|Canada|2021A000011124|                  Employment|Total - Gender|15 years and over|Persons in thousands|   428|    thousands|        3|v2091072|   1.3.1.1|20670.1|  NULL|  NULL|      NULL|       1|   2025-01-01|       2.06701E7|\n",
            "| 2025-02|Canada|2021A000011124|                  Employment|Total - Gender|15 years and over|Persons in thousands|   428|    thousands|        3|v2091072|   1.3.1.1|20768.6|  NULL|  NULL|      NULL|       1|   2025-02-01|       2.07686E7|\n",
            "| 2025-03|Canada|2021A000011124|                  Employment|Total - Gender|15 years and over|Persons in thousands|   428|    thousands|        3|v2091072|   1.3.1.1|20758.0|  NULL|  NULL|      NULL|       1|   2025-03-01|        2.0758E7|\n",
            "+--------+------+--------------+----------------------------+--------------+-----------------+--------------------+------+-------------+---------+--------+----------+-------+------+------+----------+--------+-------------+----------------+\n",
            "only showing top 5 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### Drop the columns\n",
        "df=df.drop(\"GEO\",\"DGUID\",\"UOM\",\"UOM_ID\",\"SCALAR_FACTOR\",\"SCALAR_ID\",\"DECIMALS\",\"Labour force characteristics\")"
      ],
      "metadata": {
        "id": "NunDu9q64yUS"
      },
      "id": "NunDu9q64yUS",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.show(5)"
      ],
      "metadata": {
        "id": "Imi6XBAG-L50",
        "outputId": "8940539d-9a4a-4fb1-d39d-ed5ac637f52a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "Imi6XBAG-L50",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "|REF_DATE|        Gender|        Age group|  VECTOR|COORDINATE|  VALUE|STATUS|SYMBOL|TERMINATED|REF_DATE_Date|Employment_Count|\n",
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "| 2024-11|Total - Gender|15 years and over|v2091072|   1.3.1.1|20828.6|  NULL|  NULL|      NULL|   2024-11-01|       2.08286E7|\n",
            "| 2024-12|Total - Gender|15 years and over|v2091072|   1.3.1.1|20843.6|  NULL|  NULL|      NULL|   2024-12-01|       2.08436E7|\n",
            "| 2025-01|Total - Gender|15 years and over|v2091072|   1.3.1.1|20670.1|  NULL|  NULL|      NULL|   2025-01-01|       2.06701E7|\n",
            "| 2025-02|Total - Gender|15 years and over|v2091072|   1.3.1.1|20768.6|  NULL|  NULL|      NULL|   2025-02-01|       2.07686E7|\n",
            "| 2025-03|Total - Gender|15 years and over|v2091072|   1.3.1.1|20758.0|  NULL|  NULL|      NULL|   2025-03-01|        2.0758E7|\n",
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "only showing top 5 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### Rename the columns\n",
        "df.withColumnRenamed('value', \"Employment_Count (in thousands)\" ).show(5)"
      ],
      "metadata": {
        "id": "ahzBAUwl4yKT",
        "outputId": "757cdb0a-ca2e-495d-f081-dc5808377ba9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "ahzBAUwl4yKT",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+--------------+-----------------+--------+----------+-------------------------------+------+------+----------+-------------+----------------+\n",
            "|REF_DATE|        Gender|        Age group|  VECTOR|COORDINATE|Employment_Count (in thousands)|STATUS|SYMBOL|TERMINATED|REF_DATE_Date|Employment_Count|\n",
            "+--------+--------------+-----------------+--------+----------+-------------------------------+------+------+----------+-------------+----------------+\n",
            "| 2024-11|Total - Gender|15 years and over|v2091072|   1.3.1.1|                        20828.6|  NULL|  NULL|      NULL|   2024-11-01|       2.08286E7|\n",
            "| 2024-12|Total - Gender|15 years and over|v2091072|   1.3.1.1|                        20843.6|  NULL|  NULL|      NULL|   2024-12-01|       2.08436E7|\n",
            "| 2025-01|Total - Gender|15 years and over|v2091072|   1.3.1.1|                        20670.1|  NULL|  NULL|      NULL|   2025-01-01|       2.06701E7|\n",
            "| 2025-02|Total - Gender|15 years and over|v2091072|   1.3.1.1|                        20768.6|  NULL|  NULL|      NULL|   2025-02-01|       2.07686E7|\n",
            "| 2025-03|Total - Gender|15 years and over|v2091072|   1.3.1.1|                        20758.0|  NULL|  NULL|      NULL|   2025-03-01|        2.0758E7|\n",
            "+--------+--------------+-----------------+--------+----------+-------------------------------+------+------+----------+-------------+----------------+\n",
            "only showing top 5 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "2.3 Cleaning Data: Handling missing values, removing duplicates, and correcting errors."
      ],
      "metadata": {
        "id": "pB8VUpeyCzRg"
      },
      "id": "pB8VUpeyCzRg"
    },
    {
      "cell_type": "code",
      "source": [
        "#df.na.drop().show()  #whereever it sees null value it will drop that row"
      ],
      "metadata": {
        "id": "p8JHTm7Q4x_-"
      },
      "id": "p8JHTm7Q4x_-",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "### any==how\n",
        "df.na.drop(how=\"all\").show(5) #if all the values of the row are null only then delete , how=\"any\" is the other option which is default as well"
      ],
      "metadata": {
        "id": "JrePAMfuD-eQ",
        "outputId": "d6640668-d192-485c-8f46-4fca6b33a6a2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "JrePAMfuD-eQ",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "|REF_DATE|        Gender|        Age group|  VECTOR|COORDINATE|  VALUE|STATUS|SYMBOL|TERMINATED|REF_DATE_Date|Employment_Count|\n",
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "| 2024-11|Total - Gender|15 years and over|v2091072|   1.3.1.1|20828.6|  NULL|  NULL|      NULL|   2024-11-01|       2.08286E7|\n",
            "| 2024-12|Total - Gender|15 years and over|v2091072|   1.3.1.1|20843.6|  NULL|  NULL|      NULL|   2024-12-01|       2.08436E7|\n",
            "| 2025-01|Total - Gender|15 years and over|v2091072|   1.3.1.1|20670.1|  NULL|  NULL|      NULL|   2025-01-01|       2.06701E7|\n",
            "| 2025-02|Total - Gender|15 years and over|v2091072|   1.3.1.1|20768.6|  NULL|  NULL|      NULL|   2025-02-01|       2.07686E7|\n",
            "| 2025-03|Total - Gender|15 years and over|v2091072|   1.3.1.1|20758.0|  NULL|  NULL|      NULL|   2025-03-01|        2.0758E7|\n",
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "only showing top 5 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##threshold\n",
        "df.na.drop(how=\"any\",thresh=7).show(5)  #keep those rows which have atleast 7 non null values, The thresh parameter in the drop() method specifies the minimum number of non-null values required to keep a row."
      ],
      "metadata": {
        "id": "sIfnUGk4EAFc",
        "outputId": "3615cf65-926e-498b-ab16-526ef0e212a9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "id": "sIfnUGk4EAFc",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "|REF_DATE|        Gender|        Age group|  VECTOR|COORDINATE|  VALUE|STATUS|SYMBOL|TERMINATED|REF_DATE_Date|Employment_Count|\n",
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "| 2024-11|Total - Gender|15 years and over|v2091072|   1.3.1.1|20828.6|  NULL|  NULL|      NULL|   2024-11-01|       2.08286E7|\n",
            "| 2024-12|Total - Gender|15 years and over|v2091072|   1.3.1.1|20843.6|  NULL|  NULL|      NULL|   2024-12-01|       2.08436E7|\n",
            "| 2025-01|Total - Gender|15 years and over|v2091072|   1.3.1.1|20670.1|  NULL|  NULL|      NULL|   2025-01-01|       2.06701E7|\n",
            "| 2025-02|Total - Gender|15 years and over|v2091072|   1.3.1.1|20768.6|  NULL|  NULL|      NULL|   2025-02-01|       2.07686E7|\n",
            "| 2025-03|Total - Gender|15 years and over|v2091072|   1.3.1.1|20758.0|  NULL|  NULL|      NULL|   2025-03-01|        2.0758E7|\n",
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "only showing top 5 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##Subset\n",
        "df.na.drop(how=\"any\",subset=['value']).show(5) # since value column is important, check if contain any null value, if in value column there is null value then delete that row"
      ],
      "metadata": {
        "id": "GZ4SUhcVEBs2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cdfe90ae-a9cc-4994-ba8f-a552752fefb6"
      },
      "id": "GZ4SUhcVEBs2",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "|REF_DATE|        Gender|        Age group|  VECTOR|COORDINATE|  VALUE|STATUS|SYMBOL|TERMINATED|REF_DATE_Date|Employment_Count|\n",
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "| 2024-11|Total - Gender|15 years and over|v2091072|   1.3.1.1|20828.6|  NULL|  NULL|      NULL|   2024-11-01|       2.08286E7|\n",
            "| 2024-12|Total - Gender|15 years and over|v2091072|   1.3.1.1|20843.6|  NULL|  NULL|      NULL|   2024-12-01|       2.08436E7|\n",
            "| 2025-01|Total - Gender|15 years and over|v2091072|   1.3.1.1|20670.1|  NULL|  NULL|      NULL|   2025-01-01|       2.06701E7|\n",
            "| 2025-02|Total - Gender|15 years and over|v2091072|   1.3.1.1|20768.6|  NULL|  NULL|      NULL|   2025-02-01|       2.07686E7|\n",
            "| 2025-03|Total - Gender|15 years and over|v2091072|   1.3.1.1|20758.0|  NULL|  NULL|      NULL|   2025-03-01|        2.0758E7|\n",
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "only showing top 5 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### Filling the Missing Value\n",
        "df.na.fill('Missing Values',['status']).show(5)"
      ],
      "metadata": {
        "id": "cC5Mp2tNEEDo",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "842f43e1-91de-42a3-b477-0d0eedff45be"
      },
      "id": "cC5Mp2tNEEDo",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+--------------+-----------------+--------+----------+-------+--------------+------+----------+-------------+----------------+\n",
            "|REF_DATE|        Gender|        Age group|  VECTOR|COORDINATE|  VALUE|        STATUS|SYMBOL|TERMINATED|REF_DATE_Date|Employment_Count|\n",
            "+--------+--------------+-----------------+--------+----------+-------+--------------+------+----------+-------------+----------------+\n",
            "| 2024-11|Total - Gender|15 years and over|v2091072|   1.3.1.1|20828.6|Missing Values|  NULL|      NULL|   2024-11-01|       2.08286E7|\n",
            "| 2024-12|Total - Gender|15 years and over|v2091072|   1.3.1.1|20843.6|Missing Values|  NULL|      NULL|   2024-12-01|       2.08436E7|\n",
            "| 2025-01|Total - Gender|15 years and over|v2091072|   1.3.1.1|20670.1|Missing Values|  NULL|      NULL|   2025-01-01|       2.06701E7|\n",
            "| 2025-02|Total - Gender|15 years and over|v2091072|   1.3.1.1|20768.6|Missing Values|  NULL|      NULL|   2025-02-01|       2.07686E7|\n",
            "| 2025-03|Total - Gender|15 years and over|v2091072|   1.3.1.1|20758.0|Missing Values|  NULL|      NULL|   2025-03-01|        2.0758E7|\n",
            "+--------+--------------+-----------------+--------+----------+-------+--------------+------+----------+-------------+----------------+\n",
            "only showing top 5 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pyspark.ml.feature import Imputer\n",
        "\n",
        "imputer = Imputer(\n",
        "    inputCols=['value','Age group','gender','ref_date'],\n",
        "    outputCols=[\"{}_imputed\".format(c) for c in ['value','Age group','gender','ref_date']]\n",
        "    ).setStrategy(\"median\")"
      ],
      "metadata": {
        "id": "C--tZV0g-dxd"
      },
      "id": "C--tZV0g-dxd",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "The Imputer is used to fill missing values in a DataFrame.\n",
        "inputCols: Specifies the columns in the DataFrame that contain missing values and need imputation.outputCols: Specifies the names of the new columns that will contain the imputed values. outputcols code dynamically generates the names of the output columns by appending _imputed to each input column name.\n",
        "setStrategy(\"median\"): Sets the imputation strategy to \"median\". This means that missing values will be filled with the median value of the respective column."
      ],
      "metadata": {
        "id": "kBGvSHOn_cL-"
      },
      "id": "kBGvSHOn_cL-"
    },
    {
      "cell_type": "code",
      "source": [
        "df.show(5)"
      ],
      "metadata": {
        "id": "cAAHHKVq_I-Z",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "52e0f826-404d-4436-8ff7-b0cae652528d"
      },
      "id": "cAAHHKVq_I-Z",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "|REF_DATE|        Gender|        Age group|  VECTOR|COORDINATE|  VALUE|STATUS|SYMBOL|TERMINATED|REF_DATE_Date|Employment_Count|\n",
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "| 2024-11|Total - Gender|15 years and over|v2091072|   1.3.1.1|20828.6|  NULL|  NULL|      NULL|   2024-11-01|       2.08286E7|\n",
            "| 2024-12|Total - Gender|15 years and over|v2091072|   1.3.1.1|20843.6|  NULL|  NULL|      NULL|   2024-12-01|       2.08436E7|\n",
            "| 2025-01|Total - Gender|15 years and over|v2091072|   1.3.1.1|20670.1|  NULL|  NULL|      NULL|   2025-01-01|       2.06701E7|\n",
            "| 2025-02|Total - Gender|15 years and over|v2091072|   1.3.1.1|20768.6|  NULL|  NULL|      NULL|   2025-02-01|       2.07686E7|\n",
            "| 2025-03|Total - Gender|15 years and over|v2091072|   1.3.1.1|20758.0|  NULL|  NULL|      NULL|   2025-03-01|        2.0758E7|\n",
            "+--------+--------------+-----------------+--------+----------+-------+------+------+----------+-------------+----------------+\n",
            "only showing top 5 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=df.drop(\"Status\",\"Terminated\",\"symbol\")"
      ],
      "metadata": {
        "id": "Zu4BiQkTcWzt"
      },
      "id": "Zu4BiQkTcWzt",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "**Step 3: Exploratory Data Analysis**"
      ],
      "metadata": {
        "id": "3VP0iH5L5LBu"
      },
      "id": "3VP0iH5L5LBu"
    },
    {
      "cell_type": "markdown",
      "source": [
        "1. unique age groups are present in the DataFrame?"
      ],
      "metadata": {
        "id": "ehDwbyKMm6HU"
      },
      "id": "ehDwbyKMm6HU"
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "unique_age_groups_count = df.select(\"Age group\").distinct().count()\n",
        "unique_age_groups = df.select(\"Age group\").distinct().collect()\n",
        "print(unique_age_groups_count)\n",
        "unique_age_groups\n"
      ],
      "metadata": {
        "id": "B4xiKERJ5L6G",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e714e3c9-9d19-4a15-c992-1c520efc8319"
      },
      "id": "B4xiKERJ5L6G",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "22\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Row(Age group='45 to 49 years'),\n",
              " Row(Age group='15 to 64 years'),\n",
              " Row(Age group='15 to 19 years'),\n",
              " Row(Age group='45 to 64 years'),\n",
              " Row(Age group='20 to 24 years'),\n",
              " Row(Age group='55 to 59 years'),\n",
              " Row(Age group='30 to 34 years'),\n",
              " Row(Age group='65 to 69 years'),\n",
              " Row(Age group='15 years and over'),\n",
              " Row(Age group='25 to 29 years'),\n",
              " Row(Age group='45 years and over'),\n",
              " Row(Age group='50 to 54 years'),\n",
              " Row(Age group='55 years and over'),\n",
              " Row(Age group='60 to 64 years'),\n",
              " Row(Age group='65 years and over'),\n",
              " Row(Age group='15 to 24 years'),\n",
              " Row(Age group='25 to 54 years'),\n",
              " Row(Age group='40 to 44 years'),\n",
              " Row(Age group='25 to 44 years'),\n",
              " Row(Age group='35 to 39 years'),\n",
              " Row(Age group='70 years and over'),\n",
              " Row(Age group='25 years and over')]"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "2. What is the average employment value for each age group?"
      ],
      "metadata": {
        "id": "aumwSpLnnEtX"
      },
      "id": "aumwSpLnnEtX"
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "avg_employment_age_group = df.groupBy(\"Age group\").agg(avg(\"VALUE\").alias(\"avg_employment_value\"))\n",
        "avg_employment_age_group.orderBy(desc('age group')).show()\n"
      ],
      "metadata": {
        "id": "Naqpm0sy5MQs",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "594c535e-134f-4d4d-e8e1-594c49f517a9"
      },
      "id": "Naqpm0sy5MQs",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+-----------------+--------------------+\n",
            "|        Age group|avg_employment_value|\n",
            "+-----------------+--------------------+\n",
            "|70 years and over|   278.3400014241536|\n",
            "|65 years and over|   732.8266723632812|\n",
            "|   65 to 69 years|    454.486669921875|\n",
            "|   60 to 64 years|   970.7266682942708|\n",
            "|55 years and over|   2885.979988606771|\n",
            "|   55 to 59 years|  1182.4533243815104|\n",
            "|   50 to 54 years|  1345.2333374023438|\n",
            "|45 years and over|   5626.000048828125|\n",
            "|   45 to 64 years|   4893.166666666667|\n",
            "|   45 to 49 years|  1394.7866739908854|\n",
            "|   40 to 44 years|  1567.0799967447917|\n",
            "|   35 to 39 years|  1627.5599934895833|\n",
            "|   30 to 34 years|  1722.7599853515626|\n",
            "|25 years and over|  12127.073372395833|\n",
            "|   25 to 54 years|   9241.093326822916|\n",
            "|   25 to 44 years|   6501.079947916666|\n",
            "|   25 to 29 years|              1583.7|\n",
            "|   20 to 24 years|  1189.9599975585938|\n",
            "|15 years and over|  13849.193229166667|\n",
            "|   15 to 64 years|    13116.3666015625|\n",
            "+-----------------+--------------------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "3. What is the average employment rate for each age group, separated by gender"
      ],
      "metadata": {
        "id": "3wbideA4qTzq"
      },
      "id": "3wbideA4qTzq"
    },
    {
      "cell_type": "code",
      "source": [
        "avg_employment_age_group = df.groupBy(\"gender\",\"Age group\").agg(avg(\"VALUE\").alias(\"avg_employment_value\"))\n",
        "avg_employment_age_group.orderBy(\"Age group\").show(50)"
      ],
      "metadata": {
        "id": "VxWN83fGptim",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3a9c7a6d-74ec-4c2f-a4e5-2de40ab9cfb8"
      },
      "id": "VxWN83fGptim",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------------+-----------------+--------------------+\n",
            "|        gender|        Age group|avg_employment_value|\n",
            "+--------------+-----------------+--------------------+\n",
            "|        Women+|   15 to 19 years|  412.93999633789065|\n",
            "|Total - Gender|   15 to 19 years|   798.2400146484375|\n",
            "|          Men+|   15 to 19 years|  385.32000122070315|\n",
            "|Total - Gender|   15 to 24 years|              2583.2|\n",
            "|          Men+|   15 to 24 years|  1316.8800048828125|\n",
            "|        Women+|   15 to 24 years|  1266.3199951171875|\n",
            "|          Men+|   15 to 64 years|     10262.519921875|\n",
            "|        Women+|   15 to 64 years|     9412.0400390625|\n",
            "|Total - Gender|   15 to 64 years|      19674.53984375|\n",
            "|        Women+|15 years and over|     9857.1400390625|\n",
            "|          Men+|15 years and over|    10916.6599609375|\n",
            "|Total - Gender|15 years and over|       20773.7796875|\n",
            "|Total - Gender|   20 to 24 years|  1784.9599853515624|\n",
            "|        Women+|   20 to 24 years|   853.3599975585937|\n",
            "|          Men+|   20 to 24 years|    931.560009765625|\n",
            "|          Men+|   25 to 29 years|  1233.0399658203125|\n",
            "|Total - Gender|   25 to 29 years|   2375.560009765625|\n",
            "|        Women+|   25 to 29 years|  1142.5000244140624|\n",
            "|          Men+|   25 to 44 years|    5131.17998046875|\n",
            "|Total - Gender|   25 to 44 years|      9751.619921875|\n",
            "|        Women+|   25 to 44 years|    4620.43994140625|\n",
            "|          Men+|   25 to 54 years|    7239.92001953125|\n",
            "|        Women+|   25 to 54 years|      6621.719921875|\n",
            "|Total - Gender|   25 to 54 years|    13861.6400390625|\n",
            "|          Men+|25 years and over|              9599.8|\n",
            "|Total - Gender|25 years and over|             18190.6|\n",
            "|        Women+|25 years and over|     8590.8201171875|\n",
            "|          Men+|   30 to 34 years|  1379.4999755859376|\n",
            "|Total - Gender|   30 to 34 years|   2584.139990234375|\n",
            "|        Women+|   30 to 34 years|   1204.639990234375|\n",
            "|Total - Gender|   35 to 39 years|   2441.339990234375|\n",
            "|          Men+|   35 to 39 years|   1296.939990234375|\n",
            "|        Women+|   35 to 39 years|              1144.4|\n",
            "|          Men+|   40 to 44 years|  1221.6999755859374|\n",
            "|        Women+|   40 to 44 years|  1128.9199951171875|\n",
            "|Total - Gender|   40 to 44 years|    2350.62001953125|\n",
            "|Total - Gender|   45 to 49 years|   2092.180029296875|\n",
            "|        Women+|   45 to 49 years|  1008.4799926757812|\n",
            "|          Men+|   45 to 49 years|              1083.7|\n",
            "|Total - Gender|   45 to 64 years|     7339.7599609375|\n",
            "|          Men+|   45 to 64 years|   3814.460009765625|\n",
            "|        Women+|   45 to 64 years|   3525.280029296875|\n",
            "|        Women+|45 years and over|   3970.380029296875|\n",
            "|          Men+|45 years and over|     4468.6201171875|\n",
            "|Total - Gender|45 years and over|              8439.0|\n",
            "|          Men+|   50 to 54 years|              1025.0|\n",
            "|Total - Gender|   50 to 54 years|  2017.8400146484375|\n",
            "|        Women+|   50 to 54 years|   992.8599975585937|\n",
            "|Total - Gender|   55 to 59 years|    1773.67998046875|\n",
            "|        Women+|   55 to 59 years|   855.1799926757812|\n",
            "+--------------+-----------------+--------------------+\n",
            "only showing top 50 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "4. How has employment changed over time for different age groups?"
      ],
      "metadata": {
        "id": "zP68JJucrURk"
      },
      "id": "zP68JJucrURk"
    },
    {
      "cell_type": "code",
      "source": [
        "# Group by REF_DATE and Age group and calculate the sum of employment values\n",
        "employment_over_time = df.groupBy(\"REF_DATE_date\", \"Age group\").sum(\"VALUE\")\n",
        "employment_over_time.orderBy(\"REF_DATE_date\",\"Age group\").show()\n"
      ],
      "metadata": {
        "id": "LkKNNklGrY6B",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "460c50bf-e603-47c9-bd2d-3806f2add034"
      },
      "id": "LkKNNklGrY6B",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+-------------+-----------------+------------------+\n",
            "|REF_DATE_date|        Age group|        sum(VALUE)|\n",
            "+-------------+-----------------+------------------+\n",
            "|   2024-11-01|   15 to 19 years|            1599.0|\n",
            "|   2024-11-01|   15 to 24 years|5196.4000244140625|\n",
            "|   2024-11-01|   15 to 64 years|  39485.3994140625|\n",
            "|   2024-11-01|15 years and over|  41657.2001953125|\n",
            "|   2024-11-01|   20 to 24 years|3597.3999633789062|\n",
            "|   2024-11-01|   25 to 29 years|4790.7999267578125|\n",
            "|   2024-11-01|   25 to 44 years| 19531.39990234375|\n",
            "|   2024-11-01|   25 to 54 years| 27765.39990234375|\n",
            "|   2024-11-01|25 years and over|           36461.0|\n",
            "|   2024-11-01|   30 to 34 years|5178.7999267578125|\n",
            "|   2024-11-01|   35 to 39 years|4860.2999267578125|\n",
            "|   2024-11-01|   40 to 44 years|4701.5999755859375|\n",
            "|   2024-11-01|   45 to 49 years|4144.2000732421875|\n",
            "|   2024-11-01|   45 to 64 years|14757.599853515625|\n",
            "|   2024-11-01|45 years and over|16929.500244140625|\n",
            "|   2024-11-01|   50 to 54 years| 4089.800048828125|\n",
            "|   2024-11-01|   55 to 59 years| 3574.199951171875|\n",
            "|   2024-11-01|55 years and over| 8695.499877929688|\n",
            "|   2024-11-01|   60 to 64 years|2949.6000366210938|\n",
            "|   2024-11-01|   65 to 69 years|1357.1000061035156|\n",
            "+-------------+-----------------+------------------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "5. What is the trend of employment values for the age group '15 years and over'?\n"
      ],
      "metadata": {
        "id": "z87yQU25D7TY"
      },
      "id": "z87yQU25D7TY"
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "employment_15_over = df.filter(df[\"Age group\"] == \"15 years and over\")\n",
        "employment_15_over.show(30)\n",
        "\n",
        "# Convert the Spark DataFrame to a Pandas DataFrame for plotting\n",
        "\n",
        "pdf = employment_15_over.select(\"REF_DATE\", \"Gender\", \"VALUE\").toPandas()\n",
        "\n",
        "\n",
        "# Plotting the distribution of employment values\n",
        "plt.figure()\n",
        "ax=sns.barplot(x='REF_DATE', y='VALUE', hue='Gender', data=pdf)\n",
        "\n",
        "plt.title('Distribution of Employment Values')\n",
        "plt.xlabel('Date')\n",
        "plt.ylabel('Employment Value')\n",
        "plt.xticks(rotation=45)\n",
        "plt.legend(title='Gender')\n",
        "plt.tight_layout()\n",
        "\n",
        "# Add value labels on top of each bar\n",
        "for p in ax.patches:\n",
        "    height = p.get_height()\n",
        "    ax.text(\n",
        "        p.get_x() + p.get_width() / 2,  # X: center of bar\n",
        "        height + 200,                   # Y: slightly above bar\n",
        "        f'{int(height)}',               # label\n",
        "        ha='center', va='bottom', fontsize=8\n",
        "    )\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 852
        },
        "id": "oiDblGUbD68o",
        "outputId": "6abeccb6-fb74-4eef-ab30-b0f9bfe91a4a"
      },
      "id": "oiDblGUbD68o",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+--------------+-----------------+--------+----------+-------+-------------+----------------+\n",
            "|REF_DATE|        Gender|        Age group|  VECTOR|COORDINATE|  VALUE|REF_DATE_Date|Employment_Count|\n",
            "+--------+--------------+-----------------+--------+----------+-------+-------------+----------------+\n",
            "| 2024-11|Total - Gender|15 years and over|v2091072|   1.3.1.1|20828.6|   2024-11-01|       2.08286E7|\n",
            "| 2024-12|Total - Gender|15 years and over|v2091072|   1.3.1.1|20843.6|   2024-12-01|       2.08436E7|\n",
            "| 2025-01|Total - Gender|15 years and over|v2091072|   1.3.1.1|20670.1|   2025-01-01|       2.06701E7|\n",
            "| 2025-02|Total - Gender|15 years and over|v2091072|   1.3.1.1|20768.6|   2025-02-01|       2.07686E7|\n",
            "| 2025-03|Total - Gender|15 years and over|v2091072|   1.3.1.1|20758.0|   2025-03-01|        2.0758E7|\n",
            "| 2024-11|          Men+|15 years and over|v2091282|   1.3.2.1|10989.4|   2024-11-01|       1.09894E7|\n",
            "| 2024-12|          Men+|15 years and over|v2091282|   1.3.2.1|10978.2|   2024-12-01|       1.09782E7|\n",
            "| 2025-01|          Men+|15 years and over|v2091282|   1.3.2.1|10852.1|   2025-01-01|       1.08521E7|\n",
            "| 2025-02|          Men+|15 years and over|v2091282|   1.3.2.1|10894.8|   2025-02-01|       1.08948E7|\n",
            "| 2025-03|          Men+|15 years and over|v2091282|   1.3.2.1|10868.8|   2025-03-01|       1.08688E7|\n",
            "| 2024-11|        Women+|15 years and over|v2091492|   1.3.3.1| 9839.2|   2024-11-01|       9839200.0|\n",
            "| 2024-12|        Women+|15 years and over|v2091492|   1.3.3.1| 9865.5|   2024-12-01|       9865500.0|\n",
            "| 2025-01|        Women+|15 years and over|v2091492|   1.3.3.1| 9818.0|   2025-01-01|       9818000.0|\n",
            "| 2025-02|        Women+|15 years and over|v2091492|   1.3.3.1| 9873.8|   2025-02-01|       9873800.0|\n",
            "| 2025-03|        Women+|15 years and over|v2091492|   1.3.3.1| 9889.2|   2025-03-01|       9889200.0|\n",
            "+--------+--------------+-----------------+--------+----------+-------+-------------+----------------+\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "6. What is the employment value for the age group '25 to 44 years' over the months?"
      ],
      "metadata": {
        "id": "TTVFOV_FDiei"
      },
      "id": "TTVFOV_FDiei"
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "employment_25_44 = df.filter(df[\"Age group\"] == \"25 to 44 years\").groupBy(\"REF_DATE\").sum(\"VALUE\")\n",
        "employment_25_44.show()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "seTX0IE3DjvD",
        "outputId": "166e2f03-e71a-4e94-ec66-95fad4b41693"
      },
      "id": "seTX0IE3DjvD",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+-----------------+\n",
            "|REF_DATE|       sum(VALUE)|\n",
            "+--------+-----------------+\n",
            "| 2025-01|          19399.0|\n",
            "| 2024-12|          19536.0|\n",
            "| 2024-11|19531.39990234375|\n",
            "| 2025-02|19529.19970703125|\n",
            "| 2025-03|  19520.599609375|\n",
            "+--------+-----------------+\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "7. Are there any significant changes in employment values between consecutive months?"
      ],
      "metadata": {
        "id": "LoiaWg6bGk0K"
      },
      "id": "LoiaWg6bGk0K",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Calculate the difference in employment values between consecutive months\n",
        "window_spec = Window.orderBy(\"REF_DATE\")\n",
        "df_with_lag = df.withColumn(\"prev_value\", lag(\"VALUE\").over(window_spec))\n",
        "df_with_diff = df_with_lag.withColumn(\"diff\", col(\"VALUE\") - col(\"prev_value\"))\n",
        "df_with_diff.show()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CkU1PiJ_Egmh",
        "outputId": "110c7aa3-ad29-4524-986b-c05e9a892b76"
      },
      "id": "CkU1PiJ_Egmh",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "+--------+--------------+-----------------+---------+----------+-------+-------------+----------------+----------+----------+\n",
            "|REF_DATE|        Gender|        Age group|   VECTOR|COORDINATE|  VALUE|REF_DATE_Date|Employment_Count|prev_value|      diff|\n",
            "+--------+--------------+-----------------+---------+----------+-------+-------------+----------------+----------+----------+\n",
            "| 2024-11|Total - Gender|15 years and over| v2091072|   1.3.1.1|20828.6|   2024-11-01|       2.08286E7|      NULL|      NULL|\n",
            "| 2024-11|Total - Gender|   15 to 24 years| v2091073|   1.3.1.2| 2598.2|   2024-11-01|       2598200.0|   20828.6|  -18230.4|\n",
            "| 2024-11|Total - Gender|25 years and over| v2091074|   1.3.1.3|18230.5|   2024-11-01|       1.82305E7|    2598.2|   15632.3|\n",
            "| 2024-11|Total - Gender|   25 to 44 years| v2091075|   1.3.1.4| 9765.7|   2024-11-01|       9765700.0|   18230.5|   -8464.8|\n",
            "| 2024-11|Total - Gender|   45 to 64 years|v19650588|  1.3.1.22| 7378.8|   2024-11-01|       7378800.0|    9765.7|-2386.9004|\n",
            "| 2024-11|Total - Gender|45 years and over| v2091076|   1.3.1.5| 8464.7|   2024-11-01|       8464700.0|    7378.8| 1085.9004|\n",
            "| 2024-11|Total - Gender|   25 to 54 years| v2091077|   1.3.1.6|13882.7|   2024-11-01|       1.38827E7|    8464.7|    5418.0|\n",
            "| 2024-11|Total - Gender|55 years and over| v2091078|   1.3.1.7| 4347.8|   2024-11-01|       4347800.0|   13882.7|   -9534.9|\n",
            "| 2024-11|Total - Gender|   15 to 64 years| v2091079|   1.3.1.8|19742.7|   2024-11-01|       1.97427E7|    4347.8| 15394.899|\n",
            "| 2024-11|Total - Gender|   15 to 19 years| v2091080|   1.3.1.9|  799.5|   2024-11-01|        799500.0|   19742.7|  -18943.2|\n",
            "| 2024-11|Total - Gender|   20 to 24 years| v2091081|  1.3.1.10| 1798.7|   2024-11-01|       1798700.0|     799.5| 999.19995|\n",
            "| 2024-11|Total - Gender|   25 to 29 years| v2091082|  1.3.1.11| 2395.4|   2024-11-01|       2395400.0|    1798.7| 596.69995|\n",
            "| 2024-11|Total - Gender|   30 to 34 years| v2091083|  1.3.1.12| 2589.4|   2024-11-01|       2589400.0|    2395.4|     194.0|\n",
            "| 2024-11|Total - Gender|   35 to 39 years| v2091084|  1.3.1.13| 2430.2|   2024-11-01|       2430200.0|    2589.4|-159.19995|\n",
            "| 2024-11|Total - Gender|   40 to 44 years| v2091085|  1.3.1.14| 2350.8|   2024-11-01|       2350800.0|    2430.2|  -79.3999|\n",
            "| 2024-11|Total - Gender|   45 to 49 years| v2091086|  1.3.1.15| 2072.1|   2024-11-01|       2072100.1|    2350.8|-278.69995|\n",
            "| 2024-11|Total - Gender|   50 to 54 years| v2091087|  1.3.1.16| 2044.9|   2024-11-01|       2044900.0|    2072.1|-27.200073|\n",
            "| 2024-11|Total - Gender|   55 to 59 years| v2091088|  1.3.1.17| 1787.1|   2024-11-01|       1787100.0|    2044.9|-257.80005|\n",
            "| 2024-11|Total - Gender|   60 to 64 years| v2091089|  1.3.1.18| 1474.8|   2024-11-01|       1474800.0|    1787.1|-312.29993|\n",
            "| 2024-11|Total - Gender|65 years and over| v2091090|  1.3.1.19| 1085.9|   2024-11-01|       1085900.0|    1474.8|-388.90002|\n",
            "+--------+--------------+-----------------+---------+----------+-------+-------------+----------------+----------+----------+\n",
            "only showing top 20 rows\n",
            "\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "language_info": {
      "name": "python"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}